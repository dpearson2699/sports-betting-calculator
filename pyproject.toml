[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sports-betting-calculator"
version = "0.1.0"
description = "Find mispriced event contracts and optimize betting strategies using Kelly Criterion and academic research"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Derek Pearson"},
]
dependencies = [
    "openpyxl>=3.1.5",
    "pandas>=2.3.2",
]
keywords = [
    "betting",
    "kelly-criterion",
    "event-contracts",
    "academic-research",
    "finance",
    "risk-management",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Mathematics",
]

[tool.hatch.build.targets.wheel]
packages = ["src", "config"]

[project.urls]
"Homepage" = "https://github.com/dpearson2699/sports-betting-calculator"
"Bug Reports" = "https://github.com/dpearson2699/sports-betting-calculator/issues"
"Source" = "https://github.com/dpearson2699/sports-betting-calculator"
"Documentation" = "https://github.com/dpearson2699/sports-betting-calculator#readme"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-html>=4.1.0",
    "hypothesis>=6.70.0",
    "pytest-benchmark>=4.0.0",
    "faker>=18.0.0",
]
dev = [
    "black>=24.10.0",
    "flake8>=7.0.0",
    "bandit>=1.7.0",
    "safety>=3.0.0",
]
all = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-html>=4.1.0",
    "black>=24.10.0",
    "flake8>=7.0.0",
    "bandit>=1.7.0",
    "safety>=3.0.0",
]

[project.scripts]
sports-betting-calculator = "src.main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:test-results/coverage",
    "--cov-report=xml:test-results/coverage.xml",
    "-ra",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "excel: Tests requiring Excel files",
    "property: Property-based tests",
    "performance: Performance benchmark tests",
    "mathematical: Mathematical accuracy validation tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:The NumPy module was reloaded:UserWarning",
]

[tool.coverage.run]
source = ["src"]
data_file = "test-results/.coverage"
omit = [
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  __pycache__
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test
